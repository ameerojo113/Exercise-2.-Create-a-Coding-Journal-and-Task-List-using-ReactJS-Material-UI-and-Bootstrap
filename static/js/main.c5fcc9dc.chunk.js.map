{"version":3,"sources":["Components/Journal/ThoughtsForm.js","Components/Journal/ThoughtsList.js","Components/Journal/ThoughtsTracker.js","Components/Tasks/TasksForm.js","Components/Tasks/TasksList.js","Components/Tasks/TasksTracker.js","App.js","reportWebVitals.js","index.js"],"names":["ThoughtsForm","thoughtsDate","thoughts","handleThoughtsDate","handleThoughts","handleSave","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","console","log","onSubmit","style","float","type","onChange","value","cols","rows","placeholder","className","ThoughtsList","completeThought","map","item","ThoughtDate","Thought","retrieveData","localStorage","getItem","JSON","parse","ThoughtsTracker","useState","setThoughtDate","setThought","setCompleteThought","useEffect","setItem","stringify","e","target","preventDefault","mind","alert","TasksForm","tasksDate","tasks","handleTasksDate","handleTasks","handleSaveTask","TasksList","completeTask","TaskDate","Task","TasksTracker","setTaskDate","setTask","setCompleteTask","gawain","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5fcc9dc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ThoughtsForm = ({ thoughtsDate, thoughts,\r\n    handleThoughtsDate, handleThoughts, handleSave }) => {\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    console.log(today);\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSave}>\r\n                <label style={{ float: \"left\" }}>Thoughts for the Day</label>\r\n                <label style={{ float: \"right\" }}>Date: <input type=\"date\" onChange={handleThoughtsDate} value={today} /></label>\r\n                <textarea cols=\"88\" rows=\"5\" placeholder=\"Input fields for thoughts\" onChange={handleThoughts} value={thoughts} />\r\n                <input type=\"submit\" className=\"float-end\" value=\"Save\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThoughtsForm\r\n","import React from 'react'\r\n\r\nconst ThoughtsList = ({ completeThought }) => {\r\n    return (\r\n        <div>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Thoughts for Today</th>\r\n                </tr>\r\n                {completeThought.map(item => (\r\n                    <tr>\r\n                        <td>{item.ThoughtDate}</td>\r\n                        <td>{item.Thought}</td>\r\n                        <input type=\"checkBox\" />\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThoughtsList\r\n","import React, { useState, useEffect } from 'react'\r\nimport ThoughtsForm from './ThoughtsForm';\r\nimport ThoughtsList from './ThoughtsList';\r\n\r\nconst retrieveData = localStorage.getItem(\"Thoughts\") ? JSON.parse(localStorage.getItem(\"Thoughts\")) : [];\r\nfunction ThoughtsTracker() {\r\n    const [ThoughtDate, setThoughtDate] = useState(\"\");\r\n    const [Thought, setThought] = useState(\"\");\r\n    const [completeThought, setCompleteThought] = useState(retrieveData)\r\n\r\n    const handleThoughtsDate = e => {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n        console.log(today);\r\n        setThoughtDate(today);\r\n    }\r\n    const handleThoughts = e => {\r\n        setThought(e.target.value);\r\n    }\r\n    const handleSave = e => {\r\n        e.preventDefault();\r\n        if (ThoughtDate !== \"\" && Thought !== \"\") {\r\n            const mind = { ThoughtDate, Thought };\r\n            setCompleteThought([...completeThought, mind]);\r\n            setThought(\"\");\r\n            setThoughtDate(\"\");\r\n        } else {\r\n            alert(\"Please input something in date and thought!!!\")\r\n        }\r\n    }\r\n    // const handleDelete = (e) => {\r\n    //     e.preventDefault();\r\n    //     setTotalPrice([])\r\n    // }\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Thoughts\", JSON.stringify(completeThought))\r\n    }, [completeThought])\r\n\r\n    return (\r\n        <div>\r\n            <header><h1>Thought Tracker</h1></header>\r\n            <ThoughtsForm\r\n                thoughtsDate={ThoughtDate}\r\n                thoughts={Thought}\r\n                handleThoughtsDate={handleThoughtsDate}\r\n                handleThoughts={handleThoughts}\r\n                handleSave={handleSave} />\r\n            <br></br>\r\n            <ThoughtsList completeThought={completeThought} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThoughtsTracker\r\n","import React from 'react'\r\n\r\nconst TasksForm = ({ tasksDate, tasks,\r\n    handleTasksDate, handleTasks, handleSaveTask }) => {\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    console.log(today);\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSaveTask}>\r\n                <label style={{ float: \"left\" }}>Task</label>\r\n                <label style={{ float: \"right\" }}>Date: <input type=\"date\" onChange={handleTasksDate}  value={today} /></label>\r\n                <textarea cols=\"88\" rows=\"5\" onChange={handleTasks} value={tasks} />\r\n                <input type=\"submit\" className=\"float-end\" value=\"Save\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksForm\r\n","import React from 'react'\r\n\r\nconst TasksList = ({ completeTask }) => {\r\n    return (\r\n        <div>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Tasks for today</th>\r\n                </tr>\r\n                {completeTask.map(item => (\r\n                    <tr>\r\n                        <td>{item.TaskDate}</td>\r\n                        <td>{item.Task}</td>\r\n                        <input type=\"checkBox\" />\r\n                    </tr>\r\n                ))}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksList\r\n","import React, { useState, useEffect } from 'react'\r\nimport TasksForm from './TasksForm'\r\nimport TasksList from './TasksList'\r\n\r\nconst retrieveData = localStorage.getItem(\"Tasks\") ? JSON.parse(localStorage.getItem(\"Tasks\")) : [];\r\nfunction TasksTracker() {\r\n    const [TaskDate, setTaskDate] = useState(\"\");\r\n    const [Task, setTask] = useState(\"\");\r\n    const [completeTask, setCompleteTask] = useState(retrieveData)\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n        dd = '0' + dd\r\n    }\r\n\r\n    if (mm < 10) {\r\n        mm = '0' + mm\r\n    }\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n    console.log(today);\r\n\r\n    const handleTasksDate = e => {\r\n        setTaskDate(today);\r\n    }\r\n    const handleTasks = e => {\r\n        setTask(e.target.value);\r\n    }\r\n    const handleSaveTask = e => {\r\n        e.preventDefault();\r\n\r\n        if (Task !== \"\" && TaskDate !== \"\") {\r\n            const gawain = { TaskDate, Task };\r\n            setCompleteTask([...completeTask, gawain]);\r\n            setTask(\"\");\r\n            setTaskDate(\"\");\r\n        } else {\r\n            alert(\"Please input something in date and tasks!!!\")\r\n        }\r\n    }\r\n    // const handleDelete = (e) => {\r\n    //     e.preventDefault();\r\n    //     setTotalPrice([])\r\n    // }\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Tasks\", JSON.stringify(completeTask))\r\n    }, [completeTask])\r\n    return (\r\n        <div>\r\n            <header><h1>Task Tracker</h1></header>\r\n            <TasksForm\r\n                tasksDate={TaskDate}\r\n                tasks={Task}\r\n                handleTasksDate={handleTasksDate}\r\n                handleTasks={handleTasks}\r\n                handleSaveTask={handleSaveTask} />\r\n            <br></br>\r\n            <TasksList completeTask={completeTask} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksTracker\r\n","import './App.css';\nimport ThoughtsTracker from './Components/Journal/ThoughtsTracker';\nimport TasksTracker from './Components/Tasks/TasksTracker';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"col-md-12\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <ThoughtsTracker />\n            </div>\n            <div className=\"col-md-6\">\n              <TasksTracker />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}